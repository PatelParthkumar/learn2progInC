Grading at Tue Oct  1 20:09:51 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
- Test passed
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Testing with 2 hands
Testing with 3 hands
Testing with 4 hands
Testing with 5 hands
Testing with 6 hands
- Test passed
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1180== Memcheck, a memory error detector
==1180== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1180== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1180== Command: ./tester gmc
==1180== Parent PID: 1179
==1180== 
==1180== Invalid read of size 8
==1180==    at 0x401AFE: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x4038A9: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1180==  Address 0x52042d0 is 0 bytes after a block of size 16 alloc'd
==1180==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1180==    by 0x403756: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1180== 
==1180== Invalid read of size 4
==1180==    at 0x401B01: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x4038A9: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1180==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1180== 
==1180== 
==1180== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1180==  Access not within mapped region at address 0x0
==1180==    at 0x401B01: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x4038A9: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==1180==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1180==  If you believe this happened as a result of a stack
==1180==  overflow in your program's main thread (unlikely but
==1180==  possible), you can try to increase the size of the
==1180==  main thread stack using the --main-stacksize= flag.
==1180==  The main thread stack size used in this run was 8388608.
==1180== 
==1180== HEAP SUMMARY:
==1180==     in use at exit: 112 bytes in 10 blocks
==1180==   total heap usage: 14 allocs, 4 frees, 136 bytes allocated
==1180== 
==1180== LEAK SUMMARY:
==1180==    definitely lost: 8 bytes in 1 blocks
==1180==    indirectly lost: 0 bytes in 0 blocks
==1180==      possibly lost: 0 bytes in 0 blocks
==1180==    still reachable: 104 bytes in 9 blocks
==1180==         suppressed: 0 bytes in 0 blocks
==1180== Rerun with --leak-check=full to see details of leaked memory
==1180== 
==1180== For counts of detected and suppressed errors, rerun with: -v
==1180== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: B
